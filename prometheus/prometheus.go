package prometheus

import (
	"github.com/prometheus/client_golang/prometheus"
	log "github.com/sirupsen/logrus"
)

var (
	PromVulnCount = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "labeller_cluster_vulnerabilities_count",
			Help: "Number of vulnerabilities in the cluster, labeled by severity",
		},
		[]string{
			"severity",
		},
	)

	promLabellerVulnerabilitiesTotal = prometheus.NewCounter(
		prometheus.CounterOpts{
			Name: "labeller_vulnerabilities_total",
			Help: "Total number of vulnerabilities found by the labeller",
		},
	)

	promLabellerErrorsTotal = prometheus.NewCounter(
		prometheus.CounterOpts{
			Name: "labeller_errors_total",
			Help: "Number of errors generated by the labeller",
		},
	)

	promLabellerQueueSize = prometheus.NewGauge(
		prometheus.GaugeOpts{
			Name: "labeller_queue_size",
			Help: "Number of items in the labeller's queue to process",
		},
	)

	promLabellerSecscanRequestsTotal = prometheus.NewCounter(
		prometheus.CounterOpts{
			Name: "labeller_secscan_requests_total",
			Help: "Number of requests made to external secscan services",
		},
	)

	promUpdaterDurationSeconds = prometheus.NewHistogramVec(
		prometheus.HistogramOpts{
			Name: "labeller_secscan_request_duration",
			Help: "Time it takes to get the results from ",
		},
		[]string{
			"repository",
		},
	)
)

func init() {
	prometheus.MustRegister(PromVulnCount)
	log.Info("Registered prometheus metrics")
}
